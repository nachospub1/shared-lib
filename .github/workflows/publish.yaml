name: Publish to npm

on:
  push:
    branches:
      - dev
      - qa
      - main

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v2
        with:
          version: 10

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: 'https://npm.pkg.github.com'
          scope: '@nachospub1'
          always-auth: true
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Instalar dependencias
        run: pnpm install

      - name: Compilar subproyectos
        run: pnpm build

      - name: Probar autenticaci√≥n con `npm ping`
        run: npm ping

      - name: Publicar paquetes con tag seg√∫n rama
        env:
          GITHUB_REF_NAME: ${{ github.ref_name }}
        run: node scripts/publish.all.js

      - name: Actualizar dist-tags seg√∫n la rama
        if: ${{ github.ref_name == 'qa' || github.ref_name == 'main' }}
        run: |
          # Obtener versi√≥n de los paquetes
          packages=$(pnpm ls -r --json | jq -r '.[] | select(.private == false) | .path + ":" + .name + ":" + (.version // "")')

          for entry in $packages; do
            IFS=":" read -r path pkgName version <<< "$entry"

            if [ "${{ github.ref_name }}" = "qa" ]; then
              echo "üéØ $pkgName@$version: dev ‚Üí test"
              node scripts/tag.move.js "$pkgName" "$version" "dev" "test"
            elif [ "${{ github.ref_name }}" = "main" ]; then
              echo "üéØ $pkgName@$version: test ‚Üí latest"
              node scripts/tag.move.js "$pkgName" "$version" "test" "latest"
            fi
          done
